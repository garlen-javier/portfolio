{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-regex.min.js"],"names":["a","e","n","t","s","i","Prism","pattern","alias","source","RegExp","lookbehind","languages","regex","charset","inside","range","escape","charclass","backreference","anchor","group","quantifier","alternation"],"mappings":"gFAEC,IAAUA,EACLC,EAIAC,EACAC,EACAC,EACAC,EAVN,EAAQ,QAEGL,EAoFTM,MAnFIL,EAAI,CACNM,QAAS,uBACTC,MAAO,UAGLL,EAAI,gBADJD,EAAI,8FACmBO,OAAS,IAChCL,EAAIM,OAAOP,EAAI,IAAMA,GACrBE,EAAI,CACNE,QAAS,wBACTI,YAAY,EACZH,MAAO,YAETR,EAAEY,UAAUC,MAAQ,CAClBC,QAAS,CACPP,QAAS,kDACTI,YAAY,EACZI,OAAQ,CACN,mBAAoB,CAClBR,QAAS,UACTI,YAAY,EACZH,MAAO,YAET,sBAAuB,CACrBD,QAAS,UACTC,MAAO,eAETQ,MAAO,CACLT,QAASH,EACTW,OAAQ,CACNE,OAAQf,EACR,oBAAqB,CACnBK,QAAS,IACTC,MAAO,cAIb,iBAAkBP,EAClBiB,UAAW,CACTX,QAAS,uBACTC,MAAO,cAETS,OAAQf,IAGZ,iBAAkBD,EAClBiB,UAAW,CACTX,QAAS,0BACTC,MAAO,cAETW,cAAe,CAAC,CACdZ,QAAS,2BACTC,MAAO,WACN,CACDD,QAAS,eACTC,MAAO,UACPO,OAAQ,CACN,aAAcV,KAGlBe,OAAQ,CACNb,QAAS,kBACTC,MAAO,YAETS,OAAQf,EACRmB,MAAO,CAAC,CACNd,QAAS,8EACTC,MAAO,cACPO,OAAQ,CACN,aAAcV,IAEf,CACDE,QAAS,KACTC,MAAO,gBAETc,WAAY,CACVf,QAAS,kCACTC,MAAO,UAETe,YAAa,CACXhB,QAAS,KACTC,MAAO","file":"357-704be1aa86bbd1ae4716.js","sourcesContent":["require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (a) {\n  var e = {\n    pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n    alias: \"escape\"\n  },\n      n = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/,\n      t = \"(?:[^\\\\\\\\-]|\" + n.source + \")\",\n      s = RegExp(t + \"-\" + t),\n      i = {\n    pattern: /(<|')[^<>']+(?=[>']$)/,\n    lookbehind: !0,\n    alias: \"variable\"\n  };\n  a.languages.regex = {\n    charset: {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: !0,\n      inside: {\n        \"charset-negation\": {\n          pattern: /(^\\[)\\^/,\n          lookbehind: !0,\n          alias: \"operator\"\n        },\n        \"charset-punctuation\": {\n          pattern: /^\\[|\\]$/,\n          alias: \"punctuation\"\n        },\n        range: {\n          pattern: s,\n          inside: {\n            escape: n,\n            \"range-punctuation\": {\n              pattern: /-/,\n              alias: \"operator\"\n            }\n          }\n        },\n        \"special-escape\": e,\n        charclass: {\n          pattern: /\\\\[wsd]|\\\\p{[^{}]+}/i,\n          alias: \"class-name\"\n        },\n        escape: n\n      }\n    },\n    \"special-escape\": e,\n    charclass: {\n      pattern: /\\.|\\\\[wsd]|\\\\p{[^{}]+}/i,\n      alias: \"class-name\"\n    },\n    backreference: [{\n      pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n      alias: \"keyword\"\n    }, {\n      pattern: /\\\\k<[^<>']+>/,\n      alias: \"keyword\",\n      inside: {\n        \"group-name\": i\n      }\n    }],\n    anchor: {\n      pattern: /[$^]|\\\\[ABbGZz]/,\n      alias: \"function\"\n    },\n    escape: n,\n    group: [{\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      alias: \"punctuation\",\n      inside: {\n        \"group-name\": i\n      }\n    }, {\n      pattern: /\\)/,\n      alias: \"punctuation\"\n    }],\n    quantifier: {\n      pattern: /(?:[+*?]|\\{(?:\\d+,?\\d*)\\})[?+]?/,\n      alias: \"number\"\n    },\n    alternation: {\n      pattern: /\\|/,\n      alias: \"keyword\"\n    }\n  };\n}(Prism);"],"sourceRoot":""}