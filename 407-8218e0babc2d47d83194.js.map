{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-stan.min.js"],"names":["Prism","languages","stan","comment","string","pattern","greedy","directive","lookbehind","alias","constraint","inside","expression","property","operator","punctuation","keyword","number"],"mappings":"gFAAAA,MAAMC,UAAUC,KAAO,CACrBC,QAAS,yCACTC,OAAQ,CACNC,QAAS,kCACTC,QAAQ,GAEVC,UAAW,CACTF,QAAS,yBACTG,YAAY,EACZC,MAAO,YAET,eAAgB,CACdJ,QAAS,qHACTG,YAAY,EACZC,MAAO,YAETC,WAAY,CACVL,QAAS,uDACTG,YAAY,EACZG,OAAQ,CACNC,WAAY,CACVP,QAAS,6CACTG,YAAY,EACZG,OAAQ,MAEVE,SAAU,sBACVC,SAAU,IACVC,YAAa,cAGjBC,QAAS,CAAC,iTAAkT,mGAC5T,SAAY,uBACZC,OAAQ,+CACR,QAAW,qBACXH,SAAU,8CACVC,YAAa,gBACZf,MAAMC,UAAUC,KAAKQ,WAAWC,OAAOC,WAAWD,OAASX,MAAMC,UAAUC","file":"407-8218e0babc2d47d83194.js","sourcesContent":["Prism.languages.stan = {\n  comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n  string: {\n    pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n    greedy: !0\n  },\n  directive: {\n    pattern: /^([ \\t]*)#include\\b.*/m,\n    lookbehind: !0,\n    alias: \"property\"\n  },\n  \"function-arg\": {\n    pattern: /(\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\s*\\(\\s*)[a-zA-Z]\\w*/,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  constraint: {\n    pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n    lookbehind: !0,\n    inside: {\n      expression: {\n        pattern: /(=\\s*)(?:(?!\\s*(?:>$|,\\s*\\w+\\s*=))[\\s\\S])+/,\n        lookbehind: !0,\n        inside: null\n      },\n      property: /\\b[a-z]\\w*(?=\\s*=)/i,\n      operator: /=/,\n      punctuation: /^<|>$|[,]/\n    }\n  },\n  keyword: [/\\b(?:break|cholesky_factor_corr|cholesky_factor_cov|continue|corr_matrix|cov_matrix|data|else|for|functions|generated|if|in|increment_log_prob|int|matrix|model|ordered|parameters|positive_ordered|print|quantities|real|reject|return|row_vector|simplex|target|transformed|unit_vector|vector|void|while)\\b/, /\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\b/],\n  \"function\": /\\b[a-z]\\w*(?=\\s*\\()/i,\n  number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?\\b/i,\n  \"boolean\": /\\b(?:false|true)\\b/,\n  operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n  punctuation: /[()\\[\\]{},;]/\n}, Prism.languages.stan.constraint.inside.expression.inside = Prism.languages.stan;"],"sourceRoot":""}