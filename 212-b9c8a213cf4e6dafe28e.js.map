{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-js-extras.js"],"names":["Prism","withId","source","flags","RegExp","replace","languages","insertBefore","pattern","javascript","lookbehind","alias","inside","unshift","maybeClassNameTokens","i","length","token","value","util","type"],"mappings":"kFAAA,EAAQ,QAER,EAAQ,QAER,SAAWA,GAmCT,SAASC,EAAOC,EAAQC,GACtB,OAAOC,OAAOF,EAAOG,QAAQ,SAAS,WACpC,MAAO,yCAAyCH,UAC9CC,GArCNH,EAAMM,UAAUC,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjBC,QAASJ,OAAO,YAAcJ,EAAMM,UAAUG,WAAW,qBAAqBD,QAAQN,QACtFQ,YAAY,EACZC,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDX,EAAMM,UAAUC,aAAa,aAAc,WAAY,CACrD,OAAU,CACRC,QAASJ,OAAO,YAAcJ,EAAMM,UAAUG,WAAqB,SAAEP,QACrEQ,YAAY,EACZC,MAAO,CAAC,WAAY,sBAGxBX,EAAMM,UAAUC,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAAC,CAGnBC,QAAS,yOACTG,MAAO,cACN,CAEDH,QAAS,wBACTG,MAAO,iBAiBXX,EAAMM,UAAUC,aAAa,aAAc,UAAW,CACpD,QAAW,CAETC,QAASP,EAAO,4GAA4GC,QAC5HQ,YAAY,EACZE,OAAQZ,EAAMM,UAAUG,YAE1B,QAAW,CAETD,QAASP,EAAO,mEAAmEC,QACnFQ,YAAY,EACZE,OAAQZ,EAAMM,UAAUG,cAG5BT,EAAMM,UAAUG,WAAoB,QAAEI,QAAQ,CAC5CL,QAAS,wCACTG,MAAO,UACN,CACDH,QAAS,gGACTG,MAAO,gBACN,CACDH,QAAS,WACTG,MAAO,CAAC,OAAQ,QACf,CACDH,QAAS,gBACTG,MAAO,QAETX,EAAMM,UAAUC,aAAa,aAAc,WAAY,CACrD,OAAU,CACRC,QAAS,QACTG,MAAO,YAET,MAAS,CACPH,QAAS,KACTG,MAAO,cAGXX,EAAMM,UAAUC,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjBC,QAASP,EAAO,gBAAgBC,QAChCQ,YAAY,GAEd,mBAAoB,CAClBF,QAAS,8CACTE,YAAY,GAEd,IAAO,CAELF,QAAS,kFACTG,MAAO,YAET,QAAW,CACTH,QAAS,qBACTG,MAAO,gBAMX,IAFA,IAAIG,EAAuB,CAAC,WAAY,oBAAqB,SAAU,kBAAmB,mBAEjFC,EAAI,EAAGA,EAAID,EAAqBE,OAAQD,IAAK,CACpD,IAAIE,EAAQH,EAAqBC,GAC7BG,EAAQlB,EAAMM,UAAUG,WAAWQ,GAER,WAA3BjB,EAAMmB,KAAKC,KAAKF,KAClBA,EAAQlB,EAAMM,UAAUG,WAAWQ,GAAS,CAC1CT,QAASU,IAKb,IAAIN,EAASM,EAAMN,QAAU,GAC7BM,EAAMN,OAASA,EACfA,EAAO,oBAAsB,iBAjHjC,CAmHGZ","file":"212-b9c8a213cf4e6dafe28e.js","sourcesContent":["require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);"],"sourceRoot":""}